% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloc-recognized-languages.r
\name{cloc_reognized_languages}
\alias{cloc_reognized_languages}
\title{Return a data frame of \code{cloc} recognized languages and associated extensions}
\usage{
cloc_reognized_languages()
}
\value{
tibble
}
\description{
Some file extensions map to multiple languages:
}
\details{
\itemize{
\item \code{.cl} files could be Lisp or OpenCL
\item \code{.d} files could be D or dtrace
\item \code{.f} or \code{.for} files could be Fortran or Forth
\item \code{.fs} files could be Forth or F#
\item \code{.inc} files could be PHP or Pascal
\item \code{.jl} files could be Lisp or Julia
\item \code{.m} files could be MATLAB, Mathematica, Mercury, MUMPS, or Objective C
\item \code{.pl} files could be Perl or Prolog
\item \code{.pp} files could be Pascal or Puppet
\item \code{.pro} files could be IDL, Prolog, or a Qt Project
\item \code{.ts} files could be TypeScript or Qt Linguist
\item \code{.v} files Coq or Verilog/SystemVerilog
}

\code{cloc} has subroutines that attempt to identify the correct language based
on the file's contents for these special cases. Language identification
accuracy is a function of how much code the file contains; .m files with
just one or two lines for example, seldom have enough information to
correctly distinguish between MATLAB, Mercury, MUMPS, or Objective C.
}
\examples{
cloc_reognized_languages()
}
